{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/create-new-tracker/create-new-tracker.component.ts","./src/app/create-new-tracker/create-new-tracker.component.html","./src/app/dashboard-data/dashboard-data.component.ts","./src/app/dashboard-data/dashboard-data.component.html","./src/app/dashboard-heatmap/dashboard-heatmap.component.ts","./src/app/dashboard-heatmap/dashboard-heatmap.component.html","./src/app/dashboard-heatmap/test.data.ts","./src/app/dashboard-visualizations/dashboard-visualizations.component.ts","./src/app/dashboard-visualizations/dashboard-visualizations.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/filter.pipe.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;AACG;AACY;AACyB;AAC5B;AACrB;AACsC;AAC8B;AACrB;;;AAE5F,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAC,kEAAa,EAAE,WAAW,EAAE,CAAC,yDAAS,CAAC,EAAC;IAChE,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,qEAAc,EAAC;IACxC,EAAC,IAAI,EAAC,WAAW,EAAE,SAAS,EAAC,iFAAkB,EAAE,QAAQ,EAAC;YACxD,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAC,+FAAsB,EAAE,WAAW,EAAE,CAAC,yDAAS,CAAC,EAAC;YACzE,EAAC,IAAI,EAAC,eAAe,EAAE,SAAS,EAAC,6HAAgC,EAAE,WAAW,EAAE,CAAC,yDAAS,CAAC,EAAC;YAC5F,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,yGAAyB,EAAE,WAAW,EAAE,CAAC,yDAAS,CAAC,EAAC;SAChF,EAAC;IACF,EAAC,IAAI,EAAC,oBAAoB,EAAE,SAAS,EAAC,0GAAyB,EAAE,WAAW,EAAE,CAAC,yDAAS,CAAC,EAAC;IAC1F,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,8EAAiB,EAAC;CAC/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,SAAS;IAElB,YAAoB,MAAc,EAAW,WAAuB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAW,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAEzE,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE;YACjC,2BAA2B;YAC3B,OAAO,IAAI,CAAC;SACf;QACD,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACpC,OAAO,KAAK,CAAC;IACjB,CAAC;;kEAZQ,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAEjD,IAAI,UAAU,GAAG,EAAE,CAAC;AAEpB,IAAI,UAAU,GAAG;IACtB,QAAQ,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC;IAClC,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,oBAAoB,EAAE,uBAAuB;IAC7C,kBAAkB,EAAE,qBAAqB;IACzC,kBAAkB,EAAE,qBAAqB;IACzC,iBAAiB,EAAE,oBAAoB;IACvC,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE,SAAS;IACjB,YAAY,EAAE,eAAe;IAC7B,uBAAuB,EAAE,sBAAsB;CAChD,CAAC;AAEK,SAAS,UAAU;IACxB,IAAI,QAAQ,IAAI,uBAAuB,EAAE;QACvC,OAAO;YACL,QAAQ,EAAE,uBAAuB;SAClC,CAAC;KACH;SAAM;QACL,OAAO;YACL,QAAQ,EAAE,0BAA0B;SACrC,CAAC;KACH;AACH,CAAC;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACO;AACG;AACqC;AACnD;AACa;AACa;AACH;AACA;AACrB;AACF;AACwC;AAC8B;AACrB;AACpC;;;AA0BjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,uDAAU,EAAE,0DAAS,CAAC,YARzB;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,2DAAW;YACX,mEAAmB;YACnB,sEAAa,CAAC,OAAO,EAAE;SACxB;mIAIU,SAAS,mBAtBlB,2DAAY;QACZ,kEAAa;QACb,qEAAc;QACd,0GAAyB;QACzB,iFAAkB;QAClB,+EAAiB;QACjB,wDAAU;QACV,gGAAsB;QACtB,8HAAgC;QAChC,yGAAyB,aAGzB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,2DAAW;QACX,mEAAmB;6FAMV,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,qEAAc;oBACd,0GAAyB;oBACzB,iFAAkB;oBAClB,+EAAiB;oBACjB,wDAAU;oBACV,gGAAsB;oBACtB,8HAAgC;oBAChC,yGAAyB;iBAC1B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,2DAAW;oBACX,mEAAmB;oBACnB,sEAAa,CAAC,OAAO,EAAE;iBACxB;gBACD,SAAS,EAAE,CAAC,uDAAU,EAAE,0DAAS,CAAC;gBAClC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACzB;AACgB;AACZ;;;AAE1C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAGK,MAAM,UAAU;IACrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEhC,WAAW,CAAC,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC;QACf,OAAO,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,SAAS;QACpB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,CAAC,MAAM;QACd,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,WAAW,CAAC,IAAI;QACd,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,eAAe;QACb,OAAO;YACL,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvD,OAAO,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACvD,CAAC;SACH,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,OAAO;QACtB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,oBAAoB,EACrD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,kBAAkB,CAAC,CAAC,CACtD,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,OAAO;QACtB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,kBAAkB,EACnD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,kBAAkB,CAAC,CAAC,CACtD,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,OAAO;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,kBAAkB,EACnD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,sBAAsB,CAAC,CAAC,CAC1D,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAO;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,iBAAiB,EAClD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,gBAAgB,CAAC,CAAC,CACpD,CAAC;IACN,CAAC;IAED,YAAY,CAAC,OAAO;QAClB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,MAAM,EACvC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,WAAW,CACZ;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,cAAc,CAAC,CAAC,CAClD,CAAC;IACN,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,KAAK,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,WAAW,CACZ;aACA,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW,CAAC,OAAO;QACjB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,aAAa,EAC9C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,aAAa,CAAC,CAAC,CACjD,CAAC;IACN,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,MAAM,EACvC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,CAAC,eAAe,EAAE,CACvB;aACA,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,uBAAuB,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,WAAW,CACZ;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IACN,CAAC;IAED,WAAW,CAAC,OAAO;QACjB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,sDAAU,CAAC,QAAQ,GAAG,sDAAU,CAAC,YAAY,EAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,WAAW,CACZ;aACA,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,aAAa,CAAC,CAAC,CACjD,CAAC;IACN,CAAC;IACO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YACnC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAC/C,8DAA8D;YAC9D,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YACrD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;;oEA9KU,UAAU;6FAAV,UAAU,WAAV,UAAU;6FAAV,UAAU;cADtB,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,yEACE;IAAA,sEACE;IAAA,kEAAkC;IACpC,4DAAM;IACN,sEACE;IAAA,uDAC4B;IAAA,oEAAG;IAAA,wEAAa;IAAA,4DAAI;IAAC,0FAEnD;IAAA,4DAAM;IACR,4DAAM;;;IAJF,0DAC4B;IAD5B,kLAC4B;;;IAU5B,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,yFACF;;;;IAEE,0EAKE;IAFA,keAA0C;IAE1C,mEAIK;IACL,uDACF;IAAA,4DAAM;;;IAJF,0DAAwD;IAAxD,qHAAwD;IAG1D,0DACF;IADE,sFACF;;;IAZF,0EACE;IAAA,wIAKE;IAOJ,4DAAM;;;IAVF,0DAA+C;IAA/C,iFAA+C;;;;IAYjD,0EAKE;IAFA,qeAA6C;IAE7C,mEAIK;IACL,uDACF;IAAA,4DAAM;;;IAJF,0DAAwD;IAAxD,qHAAwD;IAG1D,0DACF;IADE,sFACF;;;IAZF,0EACE;IAAA,wIAKE;IAOJ,4DAAM;;;IAVF,0DAA+C;IAA/C,iFAA+C;;;IArBrD,0EACE;IAAA,kIACE;IAEF,kIACE;IAaF,kIACE;IAaJ,4DAAM;;;IA/BgB,0DAAuB;IAAvB,oFAAuB;IAGtB,0DAAuB;IAAvB,oFAAuB;IAcvB,0DAAuB;IAAvB,oFAAuB;;;;IAvBhD,yEACE;IAAA,yEAAoB;IAAA,uDAA+C;IAAA,4DAAM;IACzE,yEACE;IAAA,mGACF;IAAA,4DAAM;IACN,2HACE;IAgCF,yEACE;IAAA,iFACA;IAAA,sEACE;IAAA,8EAAsD;IAA5C,wWAAgC;IAAC,4DAAW;IACxD,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,8EAAkC;IAA1B,qUAAyB;IAAC,kEAAM;IAAA,4DAAS;IACnD,4DAAM;IACR,4DAAM;;;IA9CgB,0DAA+C;IAA/C,mIAA+C;IAI7C,0DAAmD;IAAnD,yFAAmD;IAoC3D,0DAAgC;IAAhC,8FAAgC;;AD1CzC,MAAM,yBAAyB;IAOpC,YACU,WAAuB,EACvB,OAAe,EACf,MAAsB;QAFtB,gBAAW,GAAX,WAAW,CAAY;QACvB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAgB;QAThC,kBAAa,GAAG,EAAE,CAAC;QAEnB,QAAG,GAAG,CAAC,CAAC;QASN,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,IAAI,CAAC,GAAG,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,EAAE;gBACzD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjC,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW;aACb,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC;aACzE,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACtB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,MAAM,EAAE,MAAM;QAChC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IACzD,CAAC;IAED,gBAAgB,CAAC,MAAM,EAAE,MAAM;QAC7B,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;QACpD,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;YAC3B,IAAI,KAAK,IAAI,MAAM;gBAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;;gBAClC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;IAClD,CAAC;IAED,aAAa;QACX,IAAI,sBAAsB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrD,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAC/B,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBACzB,IAAI,MAAM,CAAC,QAAQ,EAAE;oBACnB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC3B;YACH,CAAC,CAAC,CAAC;YACH,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC1B,IAAI,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAC3C,SAAS,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;aACpC;iBAAM;gBACL,IAAI,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrC,SAAS,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;aACpC;YACD,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,GAAG;YACZ,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YACpC,sBAAsB,EAAE,sBAAsB;SAC/C,CAAC;QAEF,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;gBAC9D,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;oBACvC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;qBAAM;oBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;gBAChE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;oBACvC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;qBAAM;oBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;kGAhGU,yBAAyB;yGAAzB,yBAAyB;QCTtC,qHACE;QASF,sHACE;;QAX+B,uFAAyB;QAUrD,0DAA0B;QAA1B,wFAA0B;;6FDDlB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICkB9C,yEACE;IAAA,sEACE;IAAA,0EAAkB;IAAA,iEAAM;IAAA,4DAAO;IAC/B,0EAAkB;IAAA,uDAAiB;IAAA,4DAAO;IAC5C,4DAAM;IACN,sEACE;IAAA,0EAAkB;IAAA,uEAAY;IAAA,4DAAO;IACrC,0EAAkB;IAAA,wDAAsB;IAAA,4DAAO;IACjD,4DAAM;IACN,uEACE;IAAA,2EAAkB;IAAA,oEAAQ;IAAA,4DAAO;IACjC,2EAAkB;IAAA,wDAA0B;IAAA,4DAAO;IACrD,4DAAM;IACR,4DAAM;;;IAVgB,0DAAiB;IAAjB,+EAAiB;IAIjB,0DAAsB;IAAtB,oFAAsB;IAItB,0DAA0B;IAA1B,wFAA0B;;ADrB7C,MAAM,sBAAsB;IAKjC,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAH3C,eAAU,GAAG,EAAE,CAAC;QAChB,kBAAa,GAAG,EAAE,CAAC;QACnB,aAAQ,GAAG,EAAE,CAAC;QAEZ,IAAI,CAAC,UAAU,GAAG;YAChB,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAChC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE;SACzC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9B;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,MAAM;QACtB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAClC,IAAI,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI;gBAAE,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;;gBACjE,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAClC,IAAI,OAAO,CAAC,QAAQ;gBAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,EAAE;SACzB;aAAM,IAAI,MAAM,CAAC,IAAI,IAAI,UAAU,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;gBACtD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;oBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;SACpE;aAAM,IAAI,MAAM,CAAC,IAAI,IAAI,aAAa,EAAE;SACxC;IACH,CAAC;IAED,mBAAmB,CAAC,MAAM,IAAG,CAAC;IAE9B,oBAAoB,CAAC,QAAQ;QAC3B,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAC7B,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;;4FAxDU,sBAAsB;sGAAtB,sBAAsB;QCRnC,yEAEE;QAeA,yEACE;QAAA,mHACE;QAaJ,4DAAM;QACR,4DAAM;;QAfgB,0DAA+B;QAA/B,iFAA+B;;6FDVxC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACjC;AAEyB;AACE;;;AAOrC,MAAM,yBAAyB;IAapC;QAVA,YAAO,GAAG;YACR,MAAM,EAAE;gBACN,CAAC,CAAC,SAAS,CAAC,mDAAmD,EAAE;oBAC/D,OAAO,EAAE,EAAE;oBACX,WAAW,EAAE,EAAE;iBAChB,CAAC;aACH;YACD,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;SACxC,CAAC;IAEF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,IAAI,gBAAgB,GAAG,wDAAa,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,MAAM,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1D,CAAC;;kGAvBY,yBAAyB;yGAAzB,yBAAyB;QCXtC,yEAIM;QADJ,wKAAmB,sBAAkB,IAAC;QACxC,4DAAM;;QAFI,uFAA0B;;6FDSvB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEVD;AAAA;AAAA,+HAA+H;AAC/H,4FAA4F;AACrF,MAAM,aAAa,GAC1B,CAAC,CAAC,SAAS,EAAC,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAC,CAAC,SAAS,EAAC,GAAG,CAAC;IAC1B,CAAC,UAAU,EAAC,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,SAAS,EAAC,GAAG,CAAC;CAC1B,CAAC;;;;;;;;;;;;;ACdF;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gCAAgC;IAE3C,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gHALU,gCAAgC;gHAAhC,gCAAgC;QCP7C,qEACI;QAAA,0FACJ;QAAA,4DAAK;;6FDKQ,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,WAAW,EAAE,2CAA2C;gBACxD,SAAS,EAAE,CAAC,2CAA2C,CAAC;aACzD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICChD,0EACE;IAAA,yEACF;IAAA,4DAAM;;;IAFD,iKAA0C;;;;;IAQ7C,2EAA4H;IAA9B,+VAA6B;IAAC,uDAAa;IAAA,4DAAO;;;IAAxH,4JAAmC;IAAiE,0DAAa;IAAb,6EAAa;;ADAtI,MAAM,kBAAkB;IAM7B,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QALpE,aAAQ,GAAG,EAAE,CAAC;QAGd,mBAAc,GAAG,KAAK,CAAC;IAEgD,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG;YAClB,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;YACjC,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;SACtC,CAAC;QACF,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACtD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;IAC1C,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,aAAa,CAAC,OAAO;QACnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACpC,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI;gBAAE,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;;gBAClE,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;SAC5C;aAAM,IAAI,OAAO,CAAC,IAAI,IAAI,gBAAgB,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACrD;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC/C;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;;oFAjDU,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEACE;QAAA,8GACE;QAEF,yEACE;QAAA,0EACE;QAAA,kEAAmC;QACrC,4DAAO;QAEP,gHAA4H;QAC5H,4EAAqD;QAA7C,0IAAS,mBAAe,IAAC;QAAoB,iEAAM;QAAA,4DAAS;QACtE,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,0EAA2B;QAAA,8EAAkB;QAAA,4DAAM;QACnD,2EAA2B;QAAA,8EAAkB;QAAA,4DAAM;QACrD,4DAAM;QACN,2EACE;QAAA,4EAA+B;QACjC,4DAAM;QACN,4DAAM;QACR,4DAAM;;QApBoE,0DAAsB;QAAtB,oFAAsB;QAQlC,0DAAiC;QAAjC,qFAAiC;;6FDApF,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,UAAU;IAErB,SAAS,CAAC,KAAU,EAAE,UAAkB;QACtC,IAAI,CAAC,UAAU,EAAE;YAAC,OAAO,KAAK,CAAC;SAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,CAAC,EAAE;gBAAC,OAAO;aAAC;YACjB,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC;QACD,OAAO,QAAQ,CAAC;IACnB,CAAC;;oEATU,UAAU;gHAAV,UAAU;6FAAV,UAAU;cAHtB,kDAAI;eAAC;gBACJ,IAAI,EAAE,kBAAkB;aACzB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICuC9C,0EAKE;IAFA,6TAAmC;IAEnC,mEAAoD;IACpD,uEACE;IAAA,oFACF;IAAA,4DAAO;IACT,4DAAM;;;;IAaA,2EAME;IAFA,8VAAyB;IAEzB,uDAAS;IAAA,4DACV;;;;IAJC,+FAA4B;IAG5B,0DAAS;IAAT,iFAAS;;;IAjBjB,0EACE;IAAA,0EACE;IAAA,sEACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEACE;IAAA,4EAAmB;IAAA,wEAAa;IAAA,4DAAQ;IACxC,2EAAuB;IAAA,uDAAoC;IAAA,4DAAO;IACpE,4DAAM;IACN,sEACE;IAAA,6EAAoB;IAAA,mEAAM;IAAA,4DAAQ;IAClC,qHAME;IAEJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAlBA,0DACF;IADE,2JACF;IAGyB,0DAAoC;IAApC,yJAAoC;IAMzD,0DAAiE;IAAjE,kHAAiE;;ADtDtE,MAAM,aAAa;IAQxB,YAAoB,OAAe,EAAU,WAAuB;QAAhD,YAAO,GAAP,OAAO,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAY;QAPpE,gBAAW,GAAG,KAAK,CAAC;QAEpB,uBAAkB,GAAG,CAAC,CAAC;QACvB,kBAAa,GAAG,EAAE,CAAC;QACnB,eAAU,GAAG,EAAE,CAAC;IAGuD,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACtD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,WAAW;iBACb,oBAAoB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC;iBAC9D,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;gBACtB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;oBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;oBACtD,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,EAAE;YAC7C,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,EAAE;YAC7C,WAAW,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QACjD,IAAI,0BAA0B,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;QACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IACE,CAAC,IAAI,0BAA0B;gBAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAExC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;IAED,WAAW,CAAC,GAAG;QACb,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACf,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACf,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;YAC1D,OAAO,MAAM,CAAC;SACf;;YAAM,OAAO,OAAO,CAAC;IACxB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;0EAxEU,aAAa;6FAAb,aAAa;QCT1B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,kEAAoD;QACtD,4DAAM;QACN,yEACE;QAAA,sEACE;QAAA,uDACF;QAAA,4DAAM;QACN,sEACE;QAAA,uDACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,qEAA6B;QAC7B,0EACE;QAAA,0EACE;QAAA,mEAAmD;QACrD,4DAAM;QACN,wEAAO;QAAA,wDAAyB;QAAA,4DAAO;QACzC,4DAAM;QACN,qEAA6B;QAC7B,0EACE;QAAA,0EACE;QAAA,oEAAgD;QAClD,4DAAM;QACN,wEAAO;QAAA,wDAA6D;QAAA,4DAAO;QAC7E,4DAAM;QACN,qEAA6B;QAC7B,2EACE;QAAA,8EAAqC;QAA7B,sIAAS,sBAAkB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACtD,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,wDAEF;QAAA,4DAAM;QACN,4GAKE;QAMF,6GACE;QAqBJ,4DAAM;QACR,4DAAM;;QAjEI,0DACF;QADE,2HACF;QAEE,0DACF;QADE,oIACF;QAQK,0DAAyB;QAAzB,iIAAyB;QAOzB,0DAA6D;QAA7D,wMAA6D;QASpE,0DAEF;QAFE,+JAEF;QAEE,0DAAoB;QAApB,kFAAoB;QAUjB,0DAAmB;QAAnB,iFAAmB;;6FDzCf,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICgBxD,sEACE;IAAA,sFACF;IAAA,4DAAM;;;IAHR,0EACE;IAAA,kHACE;IAEJ,4DAAM;;;IAHC,0DAAgC;IAAhC,iGAAgC;;;IAcrC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,kHAAwC;IACxC,kHACE;IAEJ,4DAAM;;;IAJC,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;ADtB7C,MAAM,cAAc;IAGzB,YACU,WAAwB,EACxB,OAAe,EACf,WAAuB;QAFvB,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAY;IAC9B,CAAC;IAEJ,QAAQ;QACN,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,MAAM,EAAE;gBACN,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC;oBAChC,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC;iBACnB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QACD,IAAI,OAAO,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YACtD,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK;SAC1D,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpD,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aAC7B;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,IAAI,QAAQ,IAAI,GAAG;YAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;YACjD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACvC,CAAC;;4EA1DU,cAAc;8FAAd,cAAc;QCV3B,sEACE;QAAA,yEACE;QAAA,wEACE;QAAA,gFACF;QAAA,4DAAK;QACL,uEAA8B;QAAA,gEAAK;QAAA,4DAAI;QACvC,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,sEAOA;QAAA,4GACE;QAIJ,4DAAM;QACN,0EACE;QAAA,uEAOA;QAAA,4GACE;QAKJ,4DAAM;QACN,0EACE;QAAA,6EACE;QADM,uIAAS,qBAAiB,IAAC;QACjC,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,sEACE;QAAA,qFACA;QAAA,4EAAoD;QAA1B,qIAAS,mBAAe,IAAC;QAAC,sEAAU;QAAA,4DAAO;QACvE,4DAAK;QACP,4DAAM;QACR,4DAAM;;QA1CM,0DAA0B;QAA1B,uFAA0B;QAO1B,0DAA0D;QAA1D,gLAA0D;QAEvD,0DAAoC;QAApC,sGAAoC;QAYvC,0DAA4D;QAA5D,kLAA4D;QAEzD,0DAAsC;QAAtC,wGAAsC;;6FDpBxC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;ICoBxD,sEAAwC;IAAA,gFAAqB;IAAA,4DAAM;;;IADrE,0EACE;IAAA,qHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAavC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAD9D,0EACE;IAAA,qHAAqC;IACvC,4DAAM;;;IADC,0DAA+B;IAA/B,gGAA+B;;;IAcpC,sEACE;IAAA,sFACF;IAAA,4DAAM;;;IAHR,0EACE;IAAA,qHACE;IAEJ,4DAAM;;;IAHC,0DAAgC;IAAhC,iGAAgC;;;IAerC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,qHAAwC;IACxC,qHACE;IAEJ,4DAAM;;;IAJC,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;IAuCxC,sEACE;IAAA,oFACF;IAAA,4DAAM;;;IACN,sEACE;IAAA,sGACF;IAAA,4DAAM;;;IATR,0EAIE;IAAA,qHACE;IAEF,qHACE;IAEJ,4DAAM;;;IANC,0DAAoC;IAApC,qGAAoC;IAGpC,0DAAqC;IAArC,sGAAqC;;;AD/F/C,MAAM,iBAAiB;IAK9B,uBAAuB;IACvB;;;;;;;;;;;;;;OAcG;IACD,YACU,WAAwB,EACxB,OAAe,EACf,WAAuB;QAFvB,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAY;IAC9B,CAAC;IAEJ,QAAQ;QACN,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE;gBACL,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,yCAAyC,CAAC;iBAC9D;aACF;YACD,MAAM,EAAE;gBACN,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC;oBAChC,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC;iBACnB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,wBAAwB,CAAC,KAAc;QACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAAE,OAAO;QACpC,IAAI,OAAO,GAAG;YACZ,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YAClD,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;YAChD,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YACtD,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK;YACzD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK;SAC5D,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YAC5D,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBACvB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC;;kFAtFU,iBAAiB;iGAAjB,iBAAiB;;QCZ9B,sEACE;QAAA,yEACE;QAAA,wEAA4B;QAAA,mFAAwB;QAAA,4DAAK;QACzD,oEACA;QAAA,wEAA4B;QAAA,qFAA0B;QAAA,4DAAK;QAC7D,4DAAM;QACN,yEACE;QAAA,wEACE;QAAA,6HACF;QAAA,4DAAK;QACL,wEAA8B;QAAA,6EAAiB;QAAA,4DAAI;QACnD,0EACE;QAAA,2EACE;QAAA,0EACE;QAAA,uEAOA;QAAA,gHACE;QAEJ,4DAAM;QAEN,0EACE;QAAA,wEAOA;QAAA,gHACE;QAEJ,4DAAM;QAEN,0EACE;QAAA,wEAQA;QAAA,gHACE;QAIJ,4DAAM;QAEN,0EACE;QAAA,wEAOA;QAAA,gHACE;QAKJ,4DAAM;QAEN,0EACE;QAAA,wEAQD;QAoBC,gHAIE;QAOJ,4DAAM;QACN,0EACE;QAAA,iFAMA;QAFE,yRAAU,yCAAoD,IAAC;QAJjE,4DAMA;QAAA,6EACE;QAAA,0FACA;QAAA,yEAAW;QAAA,8EAAkB;QAAA,4DAAI;QAAA,4DAClC;QACH,4DAAM;QACN,0EACE;QAAA,8EACE;QADM,0IAAS,wBAAoB,IAAC;QACpC,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,sEAAI;QAAA,gFAAoB;QAAA,4EAAoD;QAA1B,wIAAS,mBAAe,IAAC;QAAC,kEAAM;QAAA,4DAAO;QAAA,4DAAK;QAChG,4DAAM;QACR,4DAAM;;QAzHM,2DAA0B;QAA1B,uFAA0B;QAO1B,0DAA4D;QAA5D,mLAA4D;QAEzD,0DAAsC;QAAtC,wGAAsC;QAWzC,0DAAyD;QAAzD,gLAAyD;QAEtD,0DAAmC;QAAnC,qGAAmC;QAYtC,0DAA0D;QAA1D,iLAA0D;QAEvD,0DAAoC;QAApC,sGAAoC;QAavC,0DAA4D;QAA5D,mLAA4D;QAEzD,0DAAsC;QAAtC,wGAAsC;QAezC,0DAA8D;QAA9D,qLAA8D;QAuB9D,0DAAwC;QAAxC,0GAAwC;QAexC,0DAA6B;QAA7B,0FAA6B;;6FDxG5B,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './app.auth.guard';\nimport { DashboardDataComponent } from './dashboard-data/dashboard-data.component';\nimport { DashboardVisualizationsComponent } from './dashboard-visualizations/dashboard-visualizations.component';\nimport { DashboardHeatmapComponent } from './dashboard-heatmap/dashboard-heatmap.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/register', pathMatch: 'full' },\n  {path:'home', component:HomeComponent, canActivate: [AuthGuard]},\n  {path:'login', component:LoginComponent},\n  {path:'dashboard', component:DashboardComponent, children:[\n    {path:'data', component:DashboardDataComponent, canActivate: [AuthGuard]},\n    {path:'visualization', component:DashboardVisualizationsComponent, canActivate: [AuthGuard]},\n    {path:'heatmap', component:DashboardHeatmapComponent, canActivate: [AuthGuard]}\n  ]},\n  {path:'create-new-tracker', component:CreateNewTrackerComponent, canActivate: [AuthGuard]},\n  {path:'register', component:RegisterComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AppService } from './app.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,  private _appService: AppService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this._appService.getSessionId()) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/register']);\n        return false;\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'identify';\n}\n","<router-outlet></router-outlet>\n","let protocol = location.protocol + '//' + location.host;\n\nexport var APP_CONFIG = {};\n\nexport var URL_CONFIG = {\n  BASE_URL: getConfigs()['BASE_URL'],\n  LOGIN: '/login',\n  SIGNUP: '/signup',\n  GET_QUESTIONS_BY_DAY: '/get-questions-by-day',\n  CREATE_NEW_TRACKER: '/create-new-tracker',\n  GET_HEALTH_TRACKER: '/get-health-tracker',\n  SAVE_DATA_FOR_DAY: '/save-data-for-day',\n  GET_USER_INFO: '/get-user-info',\n  LOGOUT: '/logout',\n  GET_SYMPTOMS: '/get-symptoms',\n  GET_ALL_ACTIVE_TRACKERS: '/get-active-trackers',\n};\n\nexport function getConfigs() {\n  if (protocol == 'http://localhost:4200') {\n    return {\n      BASE_URL: 'http://localhost:5000',\n    };\n  } else {\n    return {\n      BASE_URL: 'http://3.86.171.251:5000',\n    };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from './app.auth.guard';\nimport { FilterPipe } from './filter.pipe';\nimport { DashboardDataComponent } from './dashboard-data/dashboard-data.component';\nimport { DashboardVisualizationsComponent } from './dashboard-visualizations/dashboard-visualizations.component';\nimport { DashboardHeatmapComponent } from './dashboard-heatmap/dashboard-heatmap.component';\nimport { LeafletModule } from \"@asymmetrik/ngx-leaflet\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CreateNewTrackerComponent,\n    DashboardComponent,\n    RegisterComponent,\n    FilterPipe,\n    DashboardDataComponent,\n    DashboardVisualizationsComponent,\n    DashboardHeatmapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LeafletModule.forRoot()\n  ],\n  providers: [AppService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { URL_CONFIG } from './app.config';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) {}\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || {};\n  }\n\n  setSessionId(sessionId) {\n    localStorage.setItem('s_id', JSON.stringify(sessionId));\n  }\n\n  getSessionId() {\n    return JSON.parse(localStorage.getItem('s_id'));\n  }\n\n  setUserId(userId) {\n    localStorage.setItem('u_id', JSON.stringify(userId));\n  }\n\n  getUserId() {\n    return JSON.parse(localStorage.getItem('u_id'));\n  }\n\n  setUserData(data) {\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  getUserData() {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  }\n\n  getTokenHeaders() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        SESSION_TOKEN: JSON.parse(localStorage.getItem('s_id')),\n        USER_ID: '' + JSON.parse(localStorage.getItem('u_id')),\n      }),\n    };\n  }\n  \n  getQuestionByDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_QUESTIONS_BY_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getQuestionByDay'))\n      );\n  }\n\n  createNewTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.CREATE_NEW_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('createNewTracker'))\n      );\n  }\n\n  getUserHealthTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_HEALTH_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserHealthTracker'))\n      );\n  }\n\n  saveDataForDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SAVE_DATA_FOR_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('saveDataForDay'))\n      );\n  }\n\n  registerUser(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SIGNUP,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('registerUser'))\n      );\n  }\n\n  login(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGIN,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(map(this.extractData), catchError(this.handleError<any>('login')));\n  }\n\n  getUserInfo(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_USER_INFO,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserInfo'))\n      );\n  }\n\n  logout(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGOUT,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(map(this.extractData), catchError(this.handleError<any>('logout')));\n  }\n\n  getAllData(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_ALL_ACTIVE_TRACKERS,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getAllData'))\n      );\n  }\n\n  getSymptoms(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_SYMPTOMS,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getSymptoms'))\n      );\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-create-new-tracker',\n  templateUrl: './create-new-tracker.component.html',\n  styleUrls: ['./create-new-tracker.component.scss'],\n})\nexport class CreateNewTrackerComponent implements OnInit {\n  questionsList = [];\n  additionalComments;\n  day = 1;\n  newTracker;\n  responseSubmitted;\n  username;\n  constructor(\n    private _appService: AppService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {\n    this._route.queryParams.subscribe((params) => {\n      this.day = params['d'];\n      this.newTracker = params['n'];\n      if (this.day == undefined || this.newTracker == undefined) {\n        this._router.navigate(['/home']);\n        return;\n      }\n      this.username = this._appService.getUserData()['name'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.responseSubmitted = false;\n    this._appService\n      .getQuestionByDay({ day: this.day, userId: this._appService.getUserId() })\n      .subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          this.questionsList = data['data'];\n        } else {\n          this.responseSubmitted = true;\n        }\n      });\n  }\n\n  onClickCheckboxItem(oIndex, qIndex) {\n    let option = this.questionsList[qIndex]['options'][oIndex];\n    option.selected = !option.selected;\n    this.questionsList[qIndex]['options'][oIndex] = option;\n  }\n\n  onClickRadioItem(oIndex, qIndex) {\n    let options = this.questionsList[qIndex]['options'];\n    options.forEach((e, index) => {\n      if (index == oIndex) e.selected = true;\n      else e.selected = false;\n    });\n    this.questionsList[qIndex]['options'] = options;\n  }\n\n  onClickSubmit() {\n    let questionAndAnswersInfo = [];\n    this.questionsList.forEach((question) => {\n      let tempQAObj = JSON.parse(JSON.stringify(question));\n      let options = question.options;\n      let answers = [];\n      options.forEach((option) => {\n        if (option.selected) {\n          answers.push(option.name);\n        }\n      });\n      delete tempQAObj['options'];\n      if (question.q_type == 'O') {\n        let answerString = this.additionalComments;\n        tempQAObj['answer'] = answerString;\n      } else {\n        let answerString = answers.join(',');\n        tempQAObj['answer'] = answerString;\n      }\n      questionAndAnswersInfo.push(tempQAObj);\n    });\n    let payload = {\n      userId: this._appService.getUserId(),\n      questionAndAnswersInfo: questionAndAnswersInfo,\n    };\n\n    if (this.newTracker == '0') {\n      this._appService.saveDataForDay(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    } else {\n      this._appService.createNewTracker(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    }\n  }\n}\n","<div class=\"res-submitted-block\" *ngIf=\"responseSubmitted\">\n  <div>\n    <i class=\"fa fa-check-circle\"></i>\n  </div>\n  <div>\n    Your response has already been recorded for Day {{ day }}. We will send a\n    reminder to your registered <b>Mobile Number</b> to update your health\n    status.\n  </div>\n</div>\n<div *ngIf=\"!responseSubmitted\" class=\"q-container\">\n  <div class=\"h-text\">Day {{ day }}: Health Tracker for: {{username}}</div>\n  <div class=\"h-text-2\">\n    Please answer the following questions:\n  </div>\n  <div class=\"question\" *ngFor=\"let q of questionsList; let qIndex = index\">\n    <div class=\"q-text\" *ngIf=\"q.q_type != 'O'\">\n      {{ q.question }}\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'S'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickRadioItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-circle' : 'fa-circle'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'M'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickCheckboxItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-square' : 'fa-square'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n  </div>\n  <div class=\"add-comments\">\n    Additional Comments:\n    <div>\n      <textarea [(ngModel)]=\"additionalComments\"></textarea>\n    </div>\n  </div>\n  <div class=\"button-block\">\n    <button (click)=\"onClickSubmit()\">SUBMIT</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-dashboard-data',\n  templateUrl: './dashboard-data.component.html',\n  styleUrls: ['./dashboard-data.component.scss'],\n})\nexport class DashboardDataComponent implements OnInit {\n  isFilterSelected;\n  filterList = [];\n  filterOptions = [];\n  dataList = [];\n  constructor(private _appService: AppService) {\n    this.filterList = [\n      { name: 'Age', selected: false },\n      { name: 'Symptoms', selected: false },\n      { name: 'Gender', selected: false },\n      { name: 'Postal Code', selected: false },\n    ];\n  }\n\n  ngOnInit(): void {\n    this._appService.getAllData({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.dataList = data['data'];\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickFilterName(filter) {\n    this.filterList.forEach((element) => {\n      if (filter.name == element.name) element.selected = !element.selected;\n      else element.selected = false;\n    });\n    this.isFilterSelected = false;\n    this.filterList.forEach((element) => {\n      if (element.selected) this.isFilterSelected = true;\n    });\n    this.filterOptions = [];\n    if (filter.name == 'Age') {\n    } else if (filter.name == 'Symptoms') {\n      this._appService.getSymptoms({}).subscribe((data: {}) => {\n        if (data['code'] == 200) {\n          this.filterOptions = this.prepareFilterOptions(data['data']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    } else if (filter.name == 'Gender') {\n      this.filterOptions = this.prepareFilterOptions(['Male', 'Female']);\n    } else if (filter.name == 'Postal Code') {\n    }\n  }\n  \n  onClickFilterOption(option) {}\n\n  prepareFilterOptions(tempList) {\n    let newList = tempList.map(_ => {\n      return { name: _, selected: false };\n    });\n    return newList;\n  }\n}\n","<div class=\"data-container\">\n  \n  <!-- <div class=\"filter-section\">\n    <div class=\"filters\">\n      <span\n        class=\"filter-name\"\n        (click)=\"onClickFilterName(filter)\"\n        *ngFor=\"let filter of filterList\"\n        [ngClass]=\"{active: filter.selected}\"\n        >{{ filter.name }}</span\n      >\n    </div>\n    <div class=\"filter-options\" *ngIf=\"isFilterSelected\">\n      <span class=\"f-option\" *ngFor=\"let option of filterOptions\" (click)=\"onClickFilterOption(option)\"> {{option.name}}</span>\n    </div>\n  </div> -->\n\n  <div class=\"data-section\">\n    <div class=\"card\" *ngFor=\"let record of dataList\">\n      <div>\n        <span class=\"lbl\">Name: </span>\n        <span class=\"val\">{{ record.name }}</span>\n      </div>\n      <div>\n        <span class=\"lbl\">Start Date: </span>\n        <span class=\"val\">{{ record.date_time }}</span>\n      </div>\n      <div>\n        <span class=\"lbl\">Mobile: </span>\n        <span class=\"val\">{{ record.mobile_number }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport \"leaflet\";\ndeclare let L;\nimport 'leaflet.heat/dist/leaflet-heat.js'\nimport { addressPoints } from './test.data';\n\n@Component({\n  selector: 'app-dashboard-heatmap',\n  templateUrl: './dashboard-heatmap.component.html',\n  styleUrls: ['./dashboard-heatmap.component.scss']\n})\nexport class DashboardHeatmapComponent implements OnInit {\n  heatMap;\n  data;\n  options = {\n    layers: [\n      L.tileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 18,\n        attribution: \"\"\n      })\n    ],\n    zoom: 17,\n    center: L.latLng(44.641467, -63.587546)\n  };\n  constructor() { \n  }\n\n  ngOnInit(): void {\n    this.data = [];\n  }\n\n  onMapReady(map) {\n    let newAddressPoints = addressPoints.map(function (p) { return [p[0], p[1]]; });\n    const heat = L.heatLayer(newAddressPoints).addTo(map);\n}\n}\n","<div \n  style=\"height: 100vh;margin-top: 10px;\" \n  leaflet [leafletOptions]=\"options\" \n  (leafletMapReady)=\"onMapReady($event)\">\n</div>","//An extract of address points from the LINZ bulk extract: http://www.linz.govt.nz/survey-titles/landonline-data/landonline-bde\n//Should be this data set: http://data.linz.govt.nz/#/layer/779-nz-street-address-electoral/\nexport const addressPoints = \n[[44.645849,-63.595128,1.0],\n[44.635850,-63.575129,2.0],\n[44.6558551,-63.495130,3.0],\n[44.642604, -63.587413,4.0],\n[44.641467, -63.587546,5.0],\n[44.641567, -63.587646,4.0],\n[44.641367, -63.587346,5.0],\n[44.658180, -63.593669,2.0],\n[44.655908, -63.589010,1.0],\n[44.654487, -63.614898,3.0],\n[44.667978, -63.569711,4.0]\n];","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-visualizations',\n  templateUrl: './dashboard-visualizations.component.html',\n  styleUrls: ['./dashboard-visualizations.component.scss']\n})\nexport class DashboardVisualizationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>\n    Visualizations coming soon!!\n</h2>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  dataList = [];\n  userInfo;\n  navMenuItems;\n  displayProfile = false;\n\n  constructor(private _appService: AppService, private _router: Router) {}\n\n  ngOnInit(): void {\n    this.navMenuItems = [\n      { name: 'Data', selected: false },\n      { name: 'Visualizations', selected: false },\n      { name: 'Heat Map', selected: false },\n    ];\n    this.initializeUI();\n    this._appService.getUserInfo({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.userInfo = data['data'];\n        this._appService.setUserData(this.userInfo);\n      }\n    });\n  }\n  initializeUI() {\n    this.navMenuItems[0]['selected'] = true;\n  }\n\n  onClickLogout() {\n    this._appService.logout({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        localStorage.clear();\n        this._router.navigate(['/login']);\n      }\n    });\n  }\n  onClickOption(navItem) {\n    this.navMenuItems.forEach((element) => {\n      if (navItem.name == element.name) element.selected = !element.selected;\n      else element.selected = false;\n    });\n    if (navItem.name == 'Data') {\n      this._router.navigate(['/dashboard/data']);\n    } else if (navItem.name == 'Visualizations') {\n      this._router.navigate(['/dashboard/visualization']);\n    } else {\n      this._router.navigate(['/dashboard/heatmap']);\n    }\n  }\n  showProfile() {\n    this.displayProfile = true;\n  }\n}\n","<div class=\"dashboard-container\">\n  <div [ngClass]=\"{showprofile : displayProfile}\"   class=\"profile-section\" *ngIf=\"displayProfile\">\n    profile data\n  </div>\n  <div class=\"nav-block\">\n    <span class=\"profle-icon\">\n      <i class=\"fa fa-user-circle-o\"></i>\n    </span>\n   \n    <span class=\"nav-items\" [ngClass]=\"{active: item.selected}\" *ngFor=\"let item of navMenuItems\" (click)=\"onClickOption(item)\">{{item.name}}</span>\n    <button (click)=\"onClickLogout()\" class=\"logout-btn\">LOGOUT</button>\n  </div>\n  <div class=\"display-block\">\n    <div class=\"summary-block\">\n      <div class=\"card positive\">Positive Cases: 20</div>\n      <div class=\"card negative\">Negative Cases: 20</div>\n    </div>\n    <div class=\"router-block\">\n      <router-outlet></router-outlet>\n    </div>\n    </div>\n  </div>\n \n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'postalcodefilter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, postalcode: String):any{ \n    if (!postalcode) {return value;}\n    let solution = value.filter(v =>{\n      if (!v) {return;}\n      return v.toLowerCase().indexOf(postalcode.toLowerCase())!== -1;\n    })\n     return solution;   \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  hasActiveHT = false;\n  healthTrackerData;\n  healthTrackerCount = 0;\n  daysCompleted = [];\n  daysMissed = [];\n  trackerId;\n  userInfo;\n  constructor(private _router: Router, private _appService: AppService) {}\n\n  ngOnInit(): void {\n    this._appService.getUserInfo({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.userInfo = data['data'];\n        this._appService.setUserData(this.userInfo);\n      }\n      this._appService\n        .getUserHealthTracker({ userId: this._appService.getUserId() })\n        .subscribe((data: {}) => {\n          if (data['code'] == 200) {\n            this.hasActiveHT = true;\n            this.healthTrackerData = data['data'];\n            this.healthTrackerCount = 1;\n            this.trackerId = this.healthTrackerData['tracker_id'];\n            this.initializeTrackerDays();\n          }\n        });\n    });\n  }\n\n  onClickCreateNewTracker() {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: 1, n: 1 },\n    });\n  }\n\n  onClickDay(day) {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: day, n: 0 },\n    });\n  }\n\n  initializeTrackerDays() {\n    this.daysCompleted = [];\n    this.daysMissed = [];\n    this.daysCompleted = this.healthTrackerData.days;\n    let numberOfDaysTrackerCreated = this.healthTrackerData.tracker_days;\n    for (let i = 1; i < 15; i++) {\n      if (\n        i <= numberOfDaysTrackerCreated &&\n        this.daysCompleted.indexOf('' + i) == -1\n      )\n        this.daysMissed.push('' + i);\n    }\n  }\n\n  isDayInList(day) {\n    let index = -1;\n    index = this.daysCompleted.indexOf(day);\n    if (index == -1) {\n      if (this.daysMissed.indexOf('' + day) != -1) return 'red';\n      return 'gray';\n    } else return 'green';\n  }\n\n  onClickLogoutBtn() {\n    this._appService.logout({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        localStorage.clear();\n        this._router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<div class=\"home-page-container\">\n  <div class=\"profile-section\">\n    <div class=\"p-block-1\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"data-block\">\n        <div>\n          {{userInfo?.name}}\n        </div>\n        <div>\n          {{userInfo?.mobile_number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-2\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n      </div>\n      <span> {{userInfo?.postal_code}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-3\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-id-card\" aria-hidden=\"true\"></i>\n      </div>\n      <span> Age: {{userInfo?.date_of_birth}} Gender: {{userInfo?.gender}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"logout-btn-section\">\n      <button (click)=\"onClickLogoutBtn()\">LOGOUT</button>\n    </div>\n  </div>\n  <div class=\"tracker-section\">\n    <div class=\"tracker-header\">\n      Health Assesments: You have {{ healthTrackerCount }} health assesment(s)\n      in progress.\n    </div>\n    <div\n      *ngIf=\"!hasActiveHT\"\n      class=\"create-new-ht\"\n      (click)=\"onClickCreateNewTracker()\"\n    >\n      <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n      <span>\n        Create a health tracker\n      </span>\n    </div>\n\n    <div *ngIf=\"hasActiveHT\" class=\"active-ht-block\">\n      <div class=\"first-block\">\n        <div>\n          {{ healthTrackerData?.tracker_name }}\n        </div>\n        <div>\n          <label class=\"lbl\">Created Date:</label>\n          <span class=\"lbl-val\"> {{ healthTrackerData?.created_dt }} </span>\n        </div>\n        <div>\n          <label class=\"lbl\"> Days: </label>\n          <span\n            class=\"lbl-val\"\n            *ngFor=\"let day of '1 2 3 4 5 6 7 8 9 10 11 12 13 14'.split(' ')\"\n            [ngClass]=\"isDayInList(day)\"\n            (click)=\"onClickDay(day)\"\n          >\n            {{ day }}</span\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted;\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onClickLoginBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    let payload = {\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value,\n    };\n    this._appService.login(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this._appService.setSessionId(data['data']['session_id']);\n        this._appService.setUserId(data['data']['user_id']);\n        let userType = data['data']['user_type'];\n        this.redirectUser(userType);\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  redirectUser(userType) {\n    if (userType == 'C') this._router.navigate(['/home']);\n    else this._router.navigate(['/dashboard/data']);\n  }\n\n  onClickSignup() {\n    this._router.navigate(['/register']);\n  }\n}\n","<div>\n  <div class=\"register-box\">\n    <h2 id=\"register-heading\">\n      Welcome to Identify\n    </h2>\n    <p style=\"font-size: 1.25em;\">Login</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickLoginBtn()\" class=\"register-btn\">\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>\n      Not registered with us?\n      <span class=\"signin-text\" (click)=\"onClickSignup()\">Signup now</span>\n    </h4>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppService } from '../app.service';\n\n\n\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  agreementCheckbox: boolean;\n  submitted;\n\n// Postal Code dropdown\n/**\n showdropdown=false;\npostal=['B3J 2K9', 'B41 1H1', 'B3H 2Z3', 'B45 HJ6'];\ntoggledropdown(){\n  this.showdropdown=!this.showdropdown;\n} \n\nselectValue(value){\n  this.registerForm.patchValue({\"postalcode\":value});\n  this.toggledropdown();\n}\n\ngetpostalcodeValue(){\n  return this.registerForm.value.postalcode;\n}*/\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$/),\n        ],\n      ],\n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      postalcode: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onClickAgreementCheckbox(value: boolean) {\n    this.agreementCheckbox = value;\n  }\n\n  onClickRegisterBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    if (!this.agreementCheckbox) return;\n    let payload = {\n      name: this.registerForm.controls['username'].value,\n      email: this.registerForm.controls['email'].value,\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value,\n      postal_code: this.registerForm.controls['postalcode'].value,\n    };\n    this._appService.registerUser(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        alert(data['message']);\n        this.onClickSignIn();\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickSignIn() {\n    this._router.navigate(['/login']);\n  }\n}\n","<div>\n  <div id=\"map\" class=\"col-8\">\n    <h1 style=\"font-size: 3em;\">COVID-19 Map (Worldwide)</h1>\n    <img id=\"cover\" src=\"../../assets/covid.png\" alt=\"Covid-map\" />\n    <h1 style=\"font-size: 3em;\">Stay Home. Fight Together.</h1>\n  </div>\n  <div id=\"register-box\" class=\"col-3\">\n    <h2 id=\"register-heading\">\n      COVID-19 Symptoms? We will help you and you help us save others.\n    </h2>\n    <p style=\"font-size: 1.25em;\">Register Yourself</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Full Name*\"\n            type=\"text\"\n            formControlName=\"username\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n          />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Full Name is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Email*\"\n            type=\"text\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n          />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            maxlength=\"10\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Postal Code*\"\n            type=\"text\"\n            formControlName=\"postalcode\"\n            class=\"form-control\" \n            maxLength=\"6\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.postalcode.errors }\"\n          />\n         <!-- \n           <input\n            placeholder=\"Postal Code*\"\n            (click)=\"toggledropdown()\"\n            type=\"text\"\n            formControlName=\"postalcode\"\n            class=\"form-control\" \n            maxLength=\"6\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.postalcode.errors }\"\n          />\n          <div *ngIf=\"showdropdown\" class=\"postal-container-dropdown\">\n            <div>\n             <div (click)=\"selectValue(p)\" class=\"postal\" *ngFor=\"let p of postal | postalcodefilter: getpostalcodeValue()\">\n              {{p}}\n              </div>\n            </div>\n          </div>\n         -->\n         \n          \n          <div\n            *ngIf=\"submitted && f.postalcode.errors\"\n            class=\"invalid-feedback\"\n          >\n            <div *ngIf=\"f.postalcode.errors.required\">\n              Postal Code is required\n            </div>\n            <div *ngIf=\"f.postalcode.errors.minlength\">\n              Postal Code must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            #agreementCheckboxx\n            type=\"checkbox\"\n            [checked]=\"agreementCheckbox\"\n            (change)=\"onClickAgreementCheckbox(agreementCheckboxx.checked)\"\n          />\n          <label for=\"text\">\n            I have read and accepted the\n            <a href=\"\">Terms & Conditions</a></label\n          >\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickRegisterBtn()\" class=\"register-btn\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>Already registered? <span class=\"signin-text\" (click)=\"onClickSignIn()\">Signin</span></h4>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}