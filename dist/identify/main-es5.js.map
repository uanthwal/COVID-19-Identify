{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/create-new-tracker/create-new-tracker.component.ts","webpack:///src/app/create-new-tracker/create-new-tracker.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AuthGuard","router","_appService","route","state","getSessionId","navigate","AppComponent","title","selector","templateUrl","styleUrls","protocol","location","host","APP_CONFIG","URL_CONFIG","BASE_URL","getConfigs","LOGIN","SIGNUP","GET_QUESTIONS_BY_DAY","CREATE_NEW_TRACKER","GET_HEALTH_TRACKER","SAVE_DATA_FOR_DAY","GET_USER_INFO","LOGOUT","AppModule","declarations","providers","bootstrap","httpOptions","headers","AppService","http","res","body","session_Id","localStorage","setItem","JSON","stringify","parse","getItem","SESSION_TOKEN","USER_ID","payload","post","getTokenHeaders","pipe","extractData","handleError","operation","result","error","console","log","message","CreateNewTrackerComponent","_router","_route","questionsList","day","queryParams","subscribe","params","newTracker","undefined","responseSubmitted","getQuestionByDay","userId","getUserId","data","oIndex","qIndex","option","selected","options","forEach","index","questionAndAnswersInfo","question","tempQAObj","answers","push","name","q_type","answerString","additionalComments","join","saveDataForDay","alert","createNewTracker","HomeComponent","hasActiveHT","healthTrackerCount","daysCompleted","daysMissed","getUserInfo","userInfo","getUserHealthTracker","healthTrackerData","trackerId","initializeTrackerDays","d","n","days","numberOfDaysTrackerCreated","tracker_days","i","indexOf","logout","clear","onClickLogoutBtn","LoginComponent","formBuilder","registerForm","group","mobile","required","pattern","min","password","minLength","submitted","invalid","controls","value","mobile_number","login","setSessionId","setUserId","onClickSignup","onClickLoginBtn","RegisterComponent","username","email","postalcode","agreementCheckbox","postal_code","registerUser","onClickSignIn","onClickAgreementCheckbox","onClickRegisterBtn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './app.auth.guard';\n\nconst routes: Routes = [\n  {path:'home', component:HomeComponent, canActivate: [AuthGuard]},\n  {path:'login', component:LoginComponent},\n  {path:'create-new-tracker', component:CreateNewTrackerComponent, canActivate: [AuthGuard]},\n  {path:'register', component:RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AppService } from './app.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,  private _appService: AppService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this._appService.getSessionId()) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/register']);\n        return false;\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'identify';\n}\n","<router-outlet></router-outlet>\n","let protocol = location.protocol + '//' + location.host;\n\nexport var APP_CONFIG = {};\n\nexport var URL_CONFIG = {\n  BASE_URL: getConfigs()['BASE_URL'],\n  LOGIN: '/login',\n  SIGNUP: '/signup',\n  GET_QUESTIONS_BY_DAY: '/get-questions-by-day',\n  CREATE_NEW_TRACKER: '/create-new-tracker',\n  GET_HEALTH_TRACKER: '/get-health-tracker',\n  SAVE_DATA_FOR_DAY: '/save-data-for-day',\n  GET_USER_INFO: '/get-user-info',\n  LOGOUT:'/logout'\n};\n\nexport function getConfigs() {\n  if (protocol == 'http://localhost:4200') {\n    return {\n      BASE_URL: 'http://localhost:5000',\n    };\n  } else {\n    return {\n      BASE_URL:\n        'http://3.86.171.251:5000',\n    };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from './app.auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CreateNewTrackerComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [AppService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { URL_CONFIG } from './app.config';\n\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  }),\n};\n\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) {}\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || {};\n  }\n\n  setSessionId(session_Id) {\n    localStorage.setItem('s_id', JSON.stringify(session_Id));\n  }\n\n  getSessionId() {\n    return JSON.parse(localStorage.getItem('s_id'));\n  }\n\n  setUserId(session_Id) {\n    localStorage.setItem('u_id', JSON.stringify(session_Id));\n  }\n\n  getUserId() {\n    return JSON.parse(localStorage.getItem('u_id'));\n  }\n\n  getTokenHeaders() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        SESSION_TOKEN: JSON.parse(localStorage.getItem('s_id')),\n        USER_ID: JSON.parse(localStorage.getItem('u_id')),\n      }),\n    };\n  }\n  getQuestionByDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_QUESTIONS_BY_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getQuestionByDay'))\n      );\n  }\n\n  createNewTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.CREATE_NEW_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('createNewTracker'))\n      );\n  }\n\n  getUserHealthTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_HEALTH_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserHealthTracker'))\n      );\n  }\n\n  saveDataForDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SAVE_DATA_FOR_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('saveDataForDay'))\n      );\n  }\n\n  registerUser(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SIGNUP,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('registerUser'))\n      );\n  }\n\n  login(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGIN,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('login'))\n      );\n  }\n\n  getUserInfo(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_USER_INFO,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserInfo'))\n      );\n  }\n\n  logout(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGOUT,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('logout'))\n      );\n  }\n  \n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-create-new-tracker',\n  templateUrl: './create-new-tracker.component.html',\n  styleUrls: ['./create-new-tracker.component.scss'],\n})\nexport class CreateNewTrackerComponent implements OnInit {\n  questionsList = [];\n  additionalComments;\n  day = 1;\n  newTracker;\n  responseSubmitted;\n  constructor(\n    private _appService: AppService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {\n    this._route.queryParams.subscribe((params) => {\n      this.day = params['d'];\n      this.newTracker = params['n'];\n      if (this.day == undefined || this.newTracker == undefined) {\n        this._router.navigate(['/home']);\n        return;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.responseSubmitted = false;\n    this._appService\n      .getQuestionByDay({ day: this.day, userId: this._appService.getUserId() })\n      .subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          this.questionsList = data['data'];\n        } else {\n          this.responseSubmitted = true;\n        }\n      });\n  }\n\n  onClickCheckboxItem(oIndex, qIndex) {\n    let option = this.questionsList[qIndex]['options'][oIndex];\n    option.selected = !option.selected;\n    this.questionsList[qIndex]['options'][oIndex] = option;\n  }\n\n  onClickRadioItem(oIndex, qIndex) {\n    let options = this.questionsList[qIndex]['options'];\n    options.forEach((e, index) => {\n      if (index == oIndex) e.selected = true;\n      else e.selected = false;\n    });\n    this.questionsList[qIndex]['options'] = options;\n  }\n\n  onClickSubmit() {\n    let questionAndAnswersInfo = [];\n    this.questionsList.forEach((question) => {\n      let tempQAObj = JSON.parse(JSON.stringify(question));\n      let options = question.options;\n      let answers = [];\n      options.forEach((option) => {\n        if (option.selected) {\n          answers.push(option.name);\n        }\n      });\n      delete tempQAObj['options'];\n      if (question.q_type == 'O') {\n        let answerString = this.additionalComments;\n        tempQAObj['answer'] = answerString;\n      } else {\n        let answerString = answers.join(',');\n        tempQAObj['answer'] = answerString;\n      }\n      questionAndAnswersInfo.push(tempQAObj);\n    });\n    let payload = {\n      userId: this._appService.getUserId(),\n      questionAndAnswersInfo: questionAndAnswersInfo,\n    };\n\n    if (this.newTracker == '0') {\n      this._appService.saveDataForDay(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    } else {\n      this._appService.createNewTracker(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    }\n  }\n}\n","<div class=\"res-submitted-block\" *ngIf=\"responseSubmitted\">\n  <div>\n    <i class=\"fa fa-check-circle\"></i>\n  </div>\n  <div>\n    Your response has already been recorded for Day {{ day }}. We will send a\n    reminder to your registered <b>Mobile Number</b> to update your health\n    status.\n  </div>\n</div>\n<div *ngIf=\"!responseSubmitted\" class=\"q-container\">\n  <div class=\"h-text\">Day {{ day }}: Health Tracker for: James Smith</div>\n  <div class=\"h-text-2\">\n    Please answer the following questions:\n  </div>\n  <div class=\"question\" *ngFor=\"let q of questionsList; let qIndex = index\">\n    <div class=\"q-text\" *ngIf=\"q.q_type != 'O'\">\n      {{ q.question }}\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'S'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickRadioItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-circle' : 'fa-circle'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'M'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickCheckboxItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-square' : 'fa-square'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n  </div>\n  <div class=\"add-comments\">\n    Additional Comments:\n    <div>\n      <textarea [(ngModel)]=\"additionalComments\"></textarea>\n    </div>\n  </div>\n  <div class=\"button-block\">\n    <button (click)=\"onClickSubmit()\">SUBMIT</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  hasActiveHT = false;\n  healthTrackerData;\n  healthTrackerCount = 0;\n  daysCompleted = [];\n  daysMissed = [];\n  trackerId;\n  userInfo;\n  constructor(private _router: Router, private _appService: AppService) {}\n\n  ngOnInit(): void {\n    this._appService.getUserInfo({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.userInfo = data['data'];\n      }\n      this._appService\n        .getUserHealthTracker({ userId: this._appService.getUserId() })\n        .subscribe((data: {}) => {\n          if (data['code'] == 200) {\n            this.hasActiveHT = true;\n            this.healthTrackerData = data['data'];\n            this.healthTrackerCount = 1;\n            this.trackerId = this.healthTrackerData['tracker_id'];\n            this.initializeTrackerDays();\n          }\n        });\n    });\n  }\n\n  onClickCreateNewTracker() {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: 1, n: 1 },\n    });\n  }\n\n  onClickDay(day) {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: day, n: 0 },\n    });\n  }\n\n  initializeTrackerDays() {\n    this.daysCompleted = [];\n    this.daysMissed = [];\n    this.daysCompleted = this.healthTrackerData.days;\n    let numberOfDaysTrackerCreated = this.healthTrackerData.tracker_days;\n    for (let i = 1; i < 15; i++) {\n      if (\n        i <= numberOfDaysTrackerCreated &&\n        this.daysCompleted.indexOf('' + i) == -1\n      )\n        this.daysMissed.push('' + i);\n    }\n  }\n\n  isDayInList(day) {\n    let index = -1;\n    index = this.daysCompleted.indexOf(day);\n    if (index == -1) {\n      if (this.daysMissed.indexOf('' + day) != -1) return 'red';\n      return 'gray';\n    } else return 'green';\n  }\n\n  onClickLogoutBtn() {\n    this._appService.logout({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        localStorage.clear();\n        this._router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<div class=\"home-page-container\">\n  <div class=\"profile-section\">\n    <div class=\"p-block-1\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"data-block\">\n        <div>\n          {{userInfo?.name}}\n        </div>\n        <div>\n          {{userInfo?.mobile_number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-2\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n      </div>\n      <span> {{userInfo?.postal_code}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-3\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-id-card\" aria-hidden=\"true\"></i>\n      </div>\n      <span> Age: {{userInfo?.date_of_birth}} Gender: {{userInfo?.gender}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"logout-btn-section\">\n      <button (click)=\"onClickLogoutBtn()\">LOGOUT</button>\n    </div>\n  </div>\n  <div class=\"tracker-section\">\n    <div class=\"tracker-header\">\n      Health Assesments: You have {{ healthTrackerCount }} health assesment(s)\n      in progress.\n    </div>\n    <div\n      *ngIf=\"!hasActiveHT\"\n      class=\"create-new-ht\"\n      (click)=\"onClickCreateNewTracker()\"\n    >\n      <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n      <span>\n        Create a health tracker\n      </span>\n    </div>\n\n    <div *ngIf=\"hasActiveHT\" class=\"active-ht-block\">\n      <div class=\"first-block\">\n        <div>\n          {{ healthTrackerData?.tracker_name }}\n        </div>\n        <div>\n          <label class=\"lbl\">Created Date:</label>\n          <span class=\"lbl-val\"> {{ healthTrackerData?.created_dt }} </span>\n        </div>\n        <div>\n          <label class=\"lbl\"> Days: </label>\n          <span\n            class=\"lbl-val\"\n            *ngFor=\"let day of '1 2 3 4 5 6 7 8 9 10 11 12 13 14'.split(' ')\"\n            [ngClass]=\"isDayInList(day)\"\n            (click)=\"onClickDay(day)\"\n          >\n            {{ day }}</span\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted;\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      \n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n\n  onClickLoginBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    let payload = {\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value\n    };\n    this._appService.login(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this._appService.setSessionId(data['session_id']);\n        this._appService.setUserId(data['user_id']);\n        this.onClickSignup();\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickSignup() {\n    this._router.navigate(['/home']);\n  }\n}\n","<div>\n  <div class=\"register-box\">\n    <h2 id=\"register-heading\">\n      Welcome to Identify\n    </h2>\n    <p style=\"font-size: 1.25em;\">Login</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickLoginBtn()\" class=\"register-btn\">\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>\n      Not registered with us?\n      <span class=\"signin-text\" (click)=\"onClickSignup()\">Signup now</span>\n    </h4>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppService } from '../app.service';\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  agreementCheckbox: boolean;\n  submitted;\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$/),\n        ],\n      ],\n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      postalcode: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onClickAgreementCheckbox(value: boolean) {\n    this.agreementCheckbox = value;\n  }\n\n  onClickRegisterBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    if (!this.agreementCheckbox) return;\n    let payload = {\n      name: this.registerForm.controls['username'].value,\n      email: this.registerForm.controls['email'].value,\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value,\n      postal_code: this.registerForm.controls['postalcode'].value,\n    };\n    this._appService.registerUser(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        alert(data['message']);\n        this.onClickSignIn();\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickSignIn() {\n    this._router.navigate(['/login']);\n  }\n}\n","<div>\n  <div id=\"map\" class=\"col-8\">\n    <h1 style=\"font-size: 3em;\">COVID-19 Map (Worldwide)</h1>\n    <img id=\"cover\" src=\"../../assets/covid.png\" alt=\"Covid-map\" />\n    <h1 style=\"font-size: 3em;\">Stay Home. Fight Together.</h1>\n  </div>\n  <div id=\"register-box\" class=\"col-3\">\n    <h2 id=\"register-heading\">\n      COVID-19 Symptoms? We will help you and you help us save others.\n    </h2>\n    <p style=\"font-size: 1.25em;\">Register Yourself</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Full Name*\"\n            type=\"text\"\n            formControlName=\"username\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n          />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Full Name is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Email*\"\n            type=\"text\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n          />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            maxlength=\"10\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Postal Code*\"\n            type=\"text\"\n            formControlName=\"postalcode\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.postalcode.errors }\"\n          />\n          <div\n            *ngIf=\"submitted && f.postalcode.errors\"\n            class=\"invalid-feedback\"\n          >\n            <div *ngIf=\"f.postalcode.errors.required\">\n              Postal Code is required\n            </div>\n            <div *ngIf=\"f.postalcode.errors.minlength\">\n              Postal Code must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            #agreementCheckboxx\n            type=\"checkbox\"\n            [checked]=\"agreementCheckbox\"\n            (change)=\"onClickAgreementCheckbox(agreementCheckboxx.checked)\"\n          />\n          <label for=\"text\">\n            I have read and accepted the\n            <a href=\"\">Terms & Conditions</a></label\n          >\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickRegisterBtn()\" class=\"register-btn\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>Already registered? <span class=\"signin-text\" (click)=\"onClickSignIn()\">Signin</span></h4>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}