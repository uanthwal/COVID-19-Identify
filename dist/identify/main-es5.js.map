{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/create-new-tracker/create-new-tracker.component.ts","webpack:///src/app/create-new-tracker/create-new-tracker.component.html","webpack:///src/app/dashboard-data/dashboard-data.component.ts","webpack:///src/app/dashboard-data/dashboard-data.component.html","webpack:///src/app/dashboard-heatmap/dashboard-heatmap.component.ts","webpack:///src/app/dashboard-heatmap/dashboard-heatmap.component.html","webpack:///src/app/dashboard-heatmap/test.data.ts","webpack:///src/app/dashboard-visualizations/dashboard-visualizations.component.ts","webpack:///src/app/dashboard-visualizations/dashboard-visualizations.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/filter.pipe.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","imports","AuthGuard","router","_appService","route","state","getSessionId","navigate","AppComponent","title","selector","templateUrl","styleUrls","protocol","location","host","APP_CONFIG","URL_CONFIG","BASE_URL","getConfigs","LOGIN","SIGNUP","GET_QUESTIONS_BY_DAY","CREATE_NEW_TRACKER","GET_HEALTH_TRACKER","SAVE_DATA_FOR_DAY","GET_USER_INFO","LOGOUT","GET_SYMPTOMS","GET_ALL_ACTIVE_TRACKERS","AppModule","declarations","providers","bootstrap","httpOptions","headers","AppService","http","res","body","sessionId","localStorage","setItem","JSON","stringify","parse","getItem","userId","data","SESSION_TOKEN","USER_ID","payload","post","getTokenHeaders","pipe","extractData","handleError","operation","result","error","console","log","message","CreateNewTrackerComponent","_router","_route","questionsList","day","queryParams","subscribe","params","newTracker","undefined","username","getUserData","responseSubmitted","getQuestionByDay","getUserId","oIndex","qIndex","option","selected","options","forEach","index","questionAndAnswersInfo","question","tempQAObj","answers","push","name","q_type","answerString","additionalComments","join","saveDataForDay","alert","createNewTracker","DashboardDataComponent","filterList","filterOptions","dataList","getAllData","filter","element","isFilterSelected","getSymptoms","prepareFilterOptions","tempList","newList","map","_","DashboardHeatmapComponent","layers","L","tileLayer","maxZoom","attribution","zoom","center","latLng","newAddressPoints","p","heat","heatLayer","addTo","onMapReady","addressPoints","DashboardVisualizationsComponent","DashboardComponent","displayProfile","navMenuItems","initializeUI","getUserInfo","userInfo","setUserData","logout","clear","navItem","onClickLogout","FilterPipe","value","postalcode","solution","v","toLowerCase","indexOf","HomeComponent","hasActiveHT","healthTrackerCount","daysCompleted","daysMissed","getUserHealthTracker","healthTrackerData","trackerId","initializeTrackerDays","d","n","days","numberOfDaysTrackerCreated","tracker_days","i","onClickLogoutBtn","LoginComponent","formBuilder","registerForm","group","mobile","required","pattern","min","password","minLength","submitted","invalid","controls","mobile_number","login","setSessionId","setUserId","userType","redirectUser","onClickLoginBtn","onClickSignup","RegisterComponent","email","agreementCheckbox","postal_code","registerUser","onClickSignIn","onClickAgreementCheckbox","onClickRegisterBtn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './app.auth.guard';\nimport { DashboardDataComponent } from './dashboard-data/dashboard-data.component';\nimport { DashboardVisualizationsComponent } from './dashboard-visualizations/dashboard-visualizations.component';\nimport { DashboardHeatmapComponent } from './dashboard-heatmap/dashboard-heatmap.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/register', pathMatch: 'full' },\n  {path:'home', component:HomeComponent, canActivate: [AuthGuard]},\n  {path:'login', component:LoginComponent},\n  {path:'dashboard', component:DashboardComponent, children:[\n    {path:'data', component:DashboardDataComponent, canActivate: [AuthGuard]},\n    {path:'visualization', component:DashboardVisualizationsComponent, canActivate: [AuthGuard]},\n    {path:'heatmap', component:DashboardHeatmapComponent, canActivate: [AuthGuard]}\n  ]},\n  {path:'create-new-tracker', component:CreateNewTrackerComponent, canActivate: [AuthGuard]},\n  {path:'register', component:RegisterComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AppService } from './app.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,  private _appService: AppService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this._appService.getSessionId()) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/register']);\n        return false;\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'identify';\n}\n","<router-outlet></router-outlet>\n","let protocol = location.protocol + '//' + location.host;\n\nexport var APP_CONFIG = {};\n\nexport var URL_CONFIG = {\n  BASE_URL: getConfigs()['BASE_URL'],\n  LOGIN: '/login',\n  SIGNUP: '/signup',\n  GET_QUESTIONS_BY_DAY: '/get-questions-by-day',\n  CREATE_NEW_TRACKER: '/create-new-tracker',\n  GET_HEALTH_TRACKER: '/get-health-tracker',\n  SAVE_DATA_FOR_DAY: '/save-data-for-day',\n  GET_USER_INFO: '/get-user-info',\n  LOGOUT: '/logout',\n  GET_SYMPTOMS: '/get-symptoms',\n  GET_ALL_ACTIVE_TRACKERS: '/get-active-trackers',\n};\n\nexport function getConfigs() {\n  if (protocol == 'http://localhost:4200') {\n    return {\n      BASE_URL: 'http://localhost:5000',\n    };\n  } else {\n    return {\n      BASE_URL: 'http://3.86.171.251:5000',\n    };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateNewTrackerComponent } from './create-new-tracker/create-new-tracker.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from './app.auth.guard';\nimport { FilterPipe } from './filter.pipe';\nimport { DashboardDataComponent } from './dashboard-data/dashboard-data.component';\nimport { DashboardVisualizationsComponent } from './dashboard-visualizations/dashboard-visualizations.component';\nimport { DashboardHeatmapComponent } from './dashboard-heatmap/dashboard-heatmap.component';\nimport { LeafletModule } from \"@asymmetrik/ngx-leaflet\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CreateNewTrackerComponent,\n    DashboardComponent,\n    RegisterComponent,\n    FilterPipe,\n    DashboardDataComponent,\n    DashboardVisualizationsComponent,\n    DashboardHeatmapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LeafletModule.forRoot()\n  ],\n  providers: [AppService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { URL_CONFIG } from './app.config';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) {}\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || {};\n  }\n\n  setSessionId(sessionId) {\n    localStorage.setItem('s_id', JSON.stringify(sessionId));\n  }\n\n  getSessionId() {\n    return JSON.parse(localStorage.getItem('s_id'));\n  }\n\n  setUserId(userId) {\n    localStorage.setItem('u_id', JSON.stringify(userId));\n  }\n\n  getUserId() {\n    return JSON.parse(localStorage.getItem('u_id'));\n  }\n\n  setUserData(data) {\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  getUserData() {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  }\n\n  getTokenHeaders() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        SESSION_TOKEN: JSON.parse(localStorage.getItem('s_id')),\n        USER_ID: '' + JSON.parse(localStorage.getItem('u_id')),\n      }),\n    };\n  }\n  \n  getQuestionByDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_QUESTIONS_BY_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getQuestionByDay'))\n      );\n  }\n\n  createNewTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.CREATE_NEW_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('createNewTracker'))\n      );\n  }\n\n  getUserHealthTracker(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_HEALTH_TRACKER,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserHealthTracker'))\n      );\n  }\n\n  saveDataForDay(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SAVE_DATA_FOR_DAY,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('saveDataForDay'))\n      );\n  }\n\n  registerUser(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.SIGNUP,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('registerUser'))\n      );\n  }\n\n  login(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGIN,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(map(this.extractData), catchError(this.handleError<any>('login')));\n  }\n\n  getUserInfo(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_USER_INFO,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getUserInfo'))\n      );\n  }\n\n  logout(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.LOGOUT,\n        JSON.stringify(payload),\n        this.getTokenHeaders()\n      )\n      .pipe(map(this.extractData), catchError(this.handleError<any>('logout')));\n  }\n\n  getAllData(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_ALL_ACTIVE_TRACKERS,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getAllData'))\n      );\n  }\n\n  getSymptoms(payload) {\n    return this.http\n      .post<any>(\n        URL_CONFIG.BASE_URL + URL_CONFIG.GET_SYMPTOMS,\n        JSON.stringify(payload),\n        httpOptions\n      )\n      .pipe(\n        map(this.extractData),\n        catchError(this.handleError<any>('getSymptoms'))\n      );\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-create-new-tracker',\n  templateUrl: './create-new-tracker.component.html',\n  styleUrls: ['./create-new-tracker.component.scss'],\n})\nexport class CreateNewTrackerComponent implements OnInit {\n  questionsList = [];\n  additionalComments;\n  day = 1;\n  newTracker;\n  responseSubmitted;\n  username;\n  constructor(\n    private _appService: AppService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {\n    this._route.queryParams.subscribe((params) => {\n      this.day = params['d'];\n      this.newTracker = params['n'];\n      if (this.day == undefined || this.newTracker == undefined) {\n        this._router.navigate(['/home']);\n        return;\n      }\n      this.username = this._appService.getUserData()['name'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.responseSubmitted = false;\n    this._appService\n      .getQuestionByDay({ day: this.day, userId: this._appService.getUserId() })\n      .subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          this.questionsList = data['data'];\n        } else {\n          this.responseSubmitted = true;\n        }\n      });\n  }\n\n  onClickCheckboxItem(oIndex, qIndex) {\n    let option = this.questionsList[qIndex]['options'][oIndex];\n    option.selected = !option.selected;\n    this.questionsList[qIndex]['options'][oIndex] = option;\n  }\n\n  onClickRadioItem(oIndex, qIndex) {\n    let options = this.questionsList[qIndex]['options'];\n    options.forEach((e, index) => {\n      if (index == oIndex) e.selected = true;\n      else e.selected = false;\n    });\n    this.questionsList[qIndex]['options'] = options;\n  }\n\n  onClickSubmit() {\n    let questionAndAnswersInfo = [];\n    this.questionsList.forEach((question) => {\n      let tempQAObj = JSON.parse(JSON.stringify(question));\n      let options = question.options;\n      let answers = [];\n      options.forEach((option) => {\n        if (option.selected) {\n          answers.push(option.name);\n        }\n      });\n      delete tempQAObj['options'];\n      if (question.q_type == 'O') {\n        let answerString = this.additionalComments;\n        tempQAObj['answer'] = (answerString == null || answerString == undefined ? \"\": answerString);\n      } else {\n        let answerString = answers.join(',');\n        tempQAObj['answer'] = answerString;\n      }\n      questionAndAnswersInfo.push(tempQAObj);\n    });\n    let payload = {\n      userId: this._appService.getUserId(),\n      questionAndAnswersInfo: questionAndAnswersInfo,\n    };\n\n    if (this.newTracker == '0') {\n      this._appService.saveDataForDay(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    } else {\n      this._appService.createNewTracker(payload).subscribe((data: {}) => {\n        if (null != data && data['code'] == 200) {\n          alert(data['message']);\n          this._router.navigate(['/home']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    }\n  }\n}\n","<div class=\"res-submitted-block\" *ngIf=\"responseSubmitted\">\n  <div>\n    <i class=\"fa fa-check-circle\"></i>\n  </div>\n  <div>\n    Your response has already been recorded for Day {{ day }}. We will send a\n    reminder to your registered <b>Mobile Number</b> to update your health\n    status.\n  </div>\n</div>\n<div *ngIf=\"!responseSubmitted\" class=\"q-container\">\n  <div class=\"h-text\">Day {{ day }}: Health Tracker for: {{username}}</div>\n  <div class=\"h-text-2\">\n    Please answer the following questions:\n  </div>\n  <div class=\"question\" *ngFor=\"let q of questionsList; let qIndex = index\">\n    <div class=\"q-text\" *ngIf=\"q.q_type != 'O'\">\n      {{ q.question }}\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'S'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickRadioItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-circle' : 'fa-circle'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n    <div class=\"options\" *ngIf=\"q.q_type == 'M'\">\n      <div\n        class=\"option\"\n        *ngFor=\"let o of q.options; let oIndex = index\"\n        (click)=\"onClickCheckboxItem(oIndex, qIndex)\"\n      >\n        <i\n          class=\"fa\"\n          [ngClass]=\"o.selected ? 'fa-check-square' : 'fa-square'\"\n          aria-hidden=\"true\"\n        ></i>\n        {{ o.name }}\n      </div>\n    </div>\n  </div>\n  <div class=\"add-comments\">\n    Additional Comments:\n    <div>\n      <textarea [(ngModel)]=\"additionalComments\"></textarea>\n    </div>\n  </div>\n  <div class=\"button-block\">\n    <button (click)=\"onClickSubmit()\">SUBMIT</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-dashboard-data',\n  templateUrl: './dashboard-data.component.html',\n  styleUrls: ['./dashboard-data.component.scss'],\n})\nexport class DashboardDataComponent implements OnInit {\n  isFilterSelected;\n  filterList = [];\n  filterOptions = [];\n  dataList = [];\n  constructor(private _appService: AppService) {\n    this.filterList = [\n      { name: 'Age', selected: false },\n      { name: 'Symptoms', selected: false },\n      { name: 'Gender', selected: false },\n      { name: 'Postal Code', selected: false },\n    ];\n  }\n\n  ngOnInit(): void {\n    this._appService.getAllData({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.dataList = data['data'];\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickFilterName(filter) {\n    this.filterList.forEach((element) => {\n      if (filter.name == element.name) element.selected = !element.selected;\n      else element.selected = false;\n    });\n    this.isFilterSelected = false;\n    this.filterList.forEach((element) => {\n      if (element.selected) this.isFilterSelected = true;\n    });\n    this.filterOptions = [];\n    if (filter.name == 'Age') {\n    } else if (filter.name == 'Symptoms') {\n      this._appService.getSymptoms({}).subscribe((data: {}) => {\n        if (data['code'] == 200) {\n          this.filterOptions = this.prepareFilterOptions(data['data']);\n        } else {\n          alert(data['message']);\n        }\n      });\n    } else if (filter.name == 'Gender') {\n      this.filterOptions = this.prepareFilterOptions(['Male', 'Female']);\n    } else if (filter.name == 'Postal Code') {\n    }\n  }\n  \n  onClickFilterOption(option) {}\n\n  prepareFilterOptions(tempList) {\n    let newList = tempList.map(_ => {\n      return { name: _, selected: false };\n    });\n    return newList;\n  }\n}\n","<div class=\"data-container\">\n  \n  <!-- <div class=\"filter-section\">\n    <div class=\"filters\">\n      <span\n        class=\"filter-name\"\n        (click)=\"onClickFilterName(filter)\"\n        *ngFor=\"let filter of filterList\"\n        [ngClass]=\"{active: filter.selected}\"\n        >{{ filter.name }}</span\n      >\n    </div>\n    <div class=\"filter-options\" *ngIf=\"isFilterSelected\">\n      <span class=\"f-option\" *ngFor=\"let option of filterOptions\" (click)=\"onClickFilterOption(option)\"> {{option.name}}</span>\n    </div>\n  </div> -->\n\n  <div class=\"data-section\">\n    <div class=\"card\" *ngFor=\"let record of dataList\">\n      <div>\n        <span class=\"lbl\">Name: </span>\n        <span class=\"val\">{{ record.name }}</span>\n      </div>\n      <div>\n        <span class=\"lbl\">Start Date: </span>\n        <span class=\"val\">{{ record.date_time }}</span>\n      </div>\n      <div>\n        <span class=\"lbl\">Mobile: </span>\n        <span class=\"val\">{{ record.mobile_number }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport \"leaflet\";\ndeclare let L;\nimport 'leaflet.heat/dist/leaflet-heat.js'\nimport { addressPoints } from './test.data';\n\n@Component({\n  selector: 'app-dashboard-heatmap',\n  templateUrl: './dashboard-heatmap.component.html',\n  styleUrls: ['./dashboard-heatmap.component.scss']\n})\nexport class DashboardHeatmapComponent implements OnInit {\n  heatMap;\n  data;\n  options = {\n    layers: [\n      L.tileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 18,\n        attribution: \"\"\n      })\n    ],\n    zoom: 17,\n    center: L.latLng(44.641467, -63.587546)\n  };\n  constructor() { \n  }\n\n  ngOnInit(): void {\n    this.data = [];\n  }\n\n  onMapReady(map) {\n    let newAddressPoints = addressPoints.map(function (p) { return [p[0], p[1]]; });\n    const heat = L.heatLayer(newAddressPoints).addTo(map);\n}\n}\n","<div \n  style=\"height: 100vh;margin-top: 10px;\" \n  leaflet [leafletOptions]=\"options\" \n  (leafletMapReady)=\"onMapReady($event)\">\n</div>","//An extract of address points from the LINZ bulk extract: http://www.linz.govt.nz/survey-titles/landonline-data/landonline-bde\n//Should be this data set: http://data.linz.govt.nz/#/layer/779-nz-street-address-electoral/\nexport const addressPoints = \n[[44.645849,-63.595128,1.0],\n[44.635850,-63.575129,2.0],\n[44.6558551,-63.495130,3.0],\n[44.642604, -63.587413,4.0],\n[44.641467, -63.587546,5.0],\n[44.641567, -63.587646,4.0],\n[44.641367, -63.587346,5.0],\n[44.658180, -63.593669,2.0],\n[44.655908, -63.589010,1.0],\n[44.654487, -63.614898,3.0],\n[44.667978, -63.569711,4.0]\n];","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-visualizations',\n  templateUrl: './dashboard-visualizations.component.html',\n  styleUrls: ['./dashboard-visualizations.component.scss']\n})\nexport class DashboardVisualizationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>\n    Visualizations coming soon!!\n</h2>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  dataList = [];\n  userInfo;\n  navMenuItems;\n  displayProfile = false;\n\n  constructor(private _appService: AppService, private _router: Router) {}\n\n  ngOnInit(): void {\n    this.navMenuItems = [\n      { name: 'Data', selected: false },\n      { name: 'Visualizations', selected: false },\n      { name: 'Heat Map', selected: false },\n    ];\n    this.initializeUI();\n    this._appService.getUserInfo({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.userInfo = data['data'];\n        this._appService.setUserData(this.userInfo);\n      }\n    });\n  }\n  initializeUI() {\n    this.navMenuItems[0]['selected'] = true;\n  }\n\n  onClickLogout() {\n    this._appService.logout({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        localStorage.clear();\n        this._router.navigate(['/login']);\n      }\n    });\n  }\n  onClickOption(navItem) {\n    this.navMenuItems.forEach((element) => {\n      if (navItem.name == element.name) element.selected = !element.selected;\n      else element.selected = false;\n    });\n    if (navItem.name == 'Data') {\n      this._router.navigate(['/dashboard/data']);\n    } else if (navItem.name == 'Visualizations') {\n      this._router.navigate(['/dashboard/visualization']);\n    } else {\n      this._router.navigate(['/dashboard/heatmap']);\n    }\n  }\n  showProfile() {\n    this.displayProfile = true;\n  }\n}\n","<div class=\"dashboard-container\">\n  <div [ngClass]=\"{showprofile : displayProfile}\"   class=\"profile-section\" *ngIf=\"displayProfile\">\n    profile data\n  </div>\n  <div class=\"nav-block\">\n    <span class=\"profle-icon\">\n      <i class=\"fa fa-user-circle-o\"></i>\n    </span>\n   \n    <span class=\"nav-items\" [ngClass]=\"{active: item.selected}\" *ngFor=\"let item of navMenuItems\" (click)=\"onClickOption(item)\">{{item.name}}</span>\n    <button (click)=\"onClickLogout()\" class=\"logout-btn\">LOGOUT</button>\n  </div>\n  <div class=\"display-block\">\n    <div class=\"summary-block\">\n      <div class=\"card positive\">Positive Cases: 20</div>\n      <div class=\"card negative\">Negative Cases: 20</div>\n    </div>\n    <div class=\"router-block\">\n      <router-outlet></router-outlet>\n    </div>\n    </div>\n  </div>\n \n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'postalcodefilter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, postalcode: String):any{ \n    if (!postalcode) {return value;}\n    let solution = value.filter(v =>{\n      if (!v) {return;}\n      return v.toLowerCase().indexOf(postalcode.toLowerCase())!== -1;\n    })\n     return solution;   \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  hasActiveHT = false;\n  healthTrackerData;\n  healthTrackerCount = 0;\n  daysCompleted = [];\n  daysMissed = [];\n  trackerId;\n  userInfo;\n  constructor(private _router: Router, private _appService: AppService) {}\n\n  ngOnInit(): void {\n    this._appService.getUserInfo({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this.userInfo = data['data'];\n        this._appService.setUserData(this.userInfo);\n      }\n      this._appService\n        .getUserHealthTracker({ userId: this._appService.getUserId() })\n        .subscribe((data: {}) => {\n          if (data['code'] == 200) {\n            this.hasActiveHT = true;\n            this.healthTrackerData = data['data'];\n            this.healthTrackerCount = 1;\n            this.trackerId = this.healthTrackerData['tracker_id'];\n            this.initializeTrackerDays();\n          }\n        });\n    });\n  }\n\n  onClickCreateNewTracker() {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: 1, n: 1 },\n    });\n  }\n\n  onClickDay(day) {\n    this._router.navigate(['/create-new-tracker'], {\n      queryParams: { d: day, n: 0 },\n    });\n  }\n\n  initializeTrackerDays() {\n    this.daysCompleted = [];\n    this.daysMissed = [];\n    this.daysCompleted = this.healthTrackerData.days;\n    let numberOfDaysTrackerCreated = this.healthTrackerData.tracker_days;\n    for (let i = 1; i < 15; i++) {\n      if (\n        i <= numberOfDaysTrackerCreated &&\n        this.daysCompleted.indexOf('' + i) == -1\n      )\n        this.daysMissed.push('' + i);\n    }\n  }\n\n  isDayInList(day) {\n    let index = -1;\n    index = this.daysCompleted.indexOf(day);\n    if (index == -1) {\n      if (this.daysMissed.indexOf('' + day) != -1) return 'red';\n      return 'gray';\n    } else return 'green';\n  }\n\n  onClickLogoutBtn() {\n    this._appService.logout({}).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        localStorage.clear();\n        this._router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<div class=\"home-page-container\">\n  <div class=\"profile-section\">\n    <div class=\"p-block-1\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"data-block\">\n        <div>\n          {{userInfo?.name}}\n        </div>\n        <div>\n          {{userInfo?.mobile_number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-2\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n      </div>\n      <span> {{userInfo?.postal_code}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"p-block-3\">\n      <div class=\"icon-block\">\n        <i class=\"fa fa-id-card\" aria-hidden=\"true\"></i>\n      </div>\n      <span> Age: {{userInfo?.date_of_birth}} Gender: {{userInfo?.gender}}</span>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"logout-btn-section\">\n      <button (click)=\"onClickLogoutBtn()\">LOGOUT</button>\n    </div>\n  </div>\n  <div class=\"tracker-section\">\n    <div class=\"tracker-header\">\n      Health Assesments: You have {{ healthTrackerCount }} health assesment(s)\n      in progress.\n    </div>\n    <div\n      *ngIf=\"!hasActiveHT\"\n      class=\"create-new-ht\"\n      (click)=\"onClickCreateNewTracker()\"\n    >\n      <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n      <span>\n        Create a health tracker\n      </span>\n    </div>\n\n    <div *ngIf=\"hasActiveHT\" class=\"active-ht-block\">\n      <div class=\"first-block\">\n        <div>\n          {{ healthTrackerData?.tracker_name }}\n        </div>\n        <div>\n          <label class=\"lbl\">Created Date:</label>\n          <span class=\"lbl-val\"> {{ healthTrackerData?.created_dt }} </span>\n        </div>\n        <div>\n          <label class=\"lbl\"> Days: </label>\n          <span\n            class=\"lbl-val\"\n            *ngFor=\"let day of '1 2 3 4 5 6 7 8 9 10 11 12 13 14'.split(' ')\"\n            [ngClass]=\"isDayInList(day)\"\n            (click)=\"onClickDay(day)\"\n          >\n            {{ day }}</span\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted;\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onClickLoginBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    let payload = {\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value,\n    };\n    this._appService.login(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        this._appService.setSessionId(data['data']['session_id']);\n        this._appService.setUserId(data['data']['user_id']);\n        let userType = data['data']['user_type'];\n        this.redirectUser(userType);\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  redirectUser(userType) {\n    if (userType == 'C') this._router.navigate(['/home']);\n    else this._router.navigate(['/dashboard/data']);\n  }\n\n  onClickSignup() {\n    this._router.navigate(['/register']);\n  }\n}\n","<div>\n  <div class=\"register-box\">\n    <h2 id=\"register-heading\">\n      Welcome to Identify\n    </h2>\n    <p style=\"font-size: 1.25em;\">Login</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickLoginBtn()\" class=\"register-btn\">\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>\n      Not registered with us?\n      <span class=\"signin-text\" (click)=\"onClickSignup()\">Signup now</span>\n    </h4>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppService } from '../app.service';\n\n\n\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  agreementCheckbox: boolean;\n  submitted;\n\n// Postal Code dropdown\n/**\n showdropdown=false;\npostal=['B3J 2K9', 'B41 1H1', 'B3H 2Z3', 'B45 HJ6'];\ntoggledropdown(){\n  this.showdropdown=!this.showdropdown;\n} \n\nselectValue(value){\n  this.registerForm.patchValue({\"postalcode\":value});\n  this.toggledropdown();\n}\n\ngetpostalcodeValue(){\n  return this.registerForm.value.postalcode;\n}*/\n  constructor(\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _appService: AppService\n  ) {}\n\n  ngOnInit() {\n    localStorage.clear();\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$/),\n        ],\n      ],\n      mobile: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[0-9]\\d*$/),\n          Validators.min(10),\n        ],\n      ],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      postalcode: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onClickAgreementCheckbox(value: boolean) {\n    this.agreementCheckbox = value;\n  }\n\n  onClickRegisterBtn() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    if (!this.agreementCheckbox) return;\n    let payload = {\n      name: this.registerForm.controls['username'].value,\n      email: this.registerForm.controls['email'].value,\n      password: this.registerForm.controls['password'].value,\n      mobile_number: this.registerForm.controls['mobile'].value,\n      postal_code: this.registerForm.controls['postalcode'].value,\n    };\n    this._appService.registerUser(payload).subscribe((data: {}) => {\n      if (data['code'] == 200) {\n        alert(data['message']);\n        this.onClickSignIn();\n      } else {\n        alert(data['message']);\n      }\n    });\n  }\n\n  onClickSignIn() {\n    this._router.navigate(['/login']);\n  }\n}\n","<div>\n  <div id=\"map\" class=\"col-8\">\n    <h1 style=\"font-size: 3em;\">COVID-19 Map (Worldwide)</h1>\n    <img id=\"cover\" src=\"../../assets/covid.png\" alt=\"Covid-map\" />\n    <h1 style=\"font-size: 3em;\">Stay Home. Fight Together.</h1>\n  </div>\n  <div id=\"register-box\" class=\"col-3\">\n    <h2 id=\"register-heading\">\n      COVID-19 Symptoms? We will help you and you help us save others.\n    </h2>\n    <p style=\"font-size: 1.25em;\">Register Yourself</p>\n    <div class=\"reg-form\">\n      <form [formGroup]=\"registerForm\">\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Full Name*\"\n            type=\"text\"\n            formControlName=\"username\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n          />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Full Name is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Email*\"\n            type=\"text\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n          />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Mobile Number*\"\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"form-control\"\n            maxlength=\"10\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"\n          />\n          <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.mobile.errors.required\">\n              Mobile Number is required\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Password*\"\n            type=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n          />\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            placeholder=\"Postal Code*\"\n            type=\"text\"\n            formControlName=\"postalcode\"\n            class=\"form-control\" \n            maxLength=\"6\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.postalcode.errors }\"\n          />\n         <!-- \n           <input\n            placeholder=\"Postal Code*\"\n            (click)=\"toggledropdown()\"\n            type=\"text\"\n            formControlName=\"postalcode\"\n            class=\"form-control\" \n            maxLength=\"6\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.postalcode.errors }\"\n          />\n          <div *ngIf=\"showdropdown\" class=\"postal-container-dropdown\">\n            <div>\n             <div (click)=\"selectValue(p)\" class=\"postal\" *ngFor=\"let p of postal | postalcodefilter: getpostalcodeValue()\">\n              {{p}}\n              </div>\n            </div>\n          </div>\n         -->\n         \n          \n          <div\n            *ngIf=\"submitted && f.postalcode.errors\"\n            class=\"invalid-feedback\"\n          >\n            <div *ngIf=\"f.postalcode.errors.required\">\n              Postal Code is required\n            </div>\n            <div *ngIf=\"f.postalcode.errors.minlength\">\n              Postal Code must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input\n            #agreementCheckboxx\n            type=\"checkbox\"\n            [checked]=\"agreementCheckbox\"\n            (change)=\"onClickAgreementCheckbox(agreementCheckboxx.checked)\"\n          />\n          <label for=\"text\">\n            I have read and accepted the\n            <a href=\"\">Terms & Conditions</a></label\n          >\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"onClickRegisterBtn()\" class=\"register-btn\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n    <h4>Already registered? <span class=\"signin-text\" (click)=\"onClickSignIn()\">Signin</span></h4>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}